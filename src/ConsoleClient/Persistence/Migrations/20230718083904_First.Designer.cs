// <auto-generated />
using System;
using ConsoleClient.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleClient.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230718083904_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("CRM.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ceo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CRM.Domain.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ООО"
                        },
                        new
                        {
                            Id = 2,
                            Name = "АО"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ПАО"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ИП"
                        });
                });

            modelBuilder.Entity("CRM.Domain.Entities.UserClaimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UserClaimTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Company.Create",
                            Value = "Company.Create"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Company.New.Other.Set",
                            Value = "Company.New.Other.Set"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Company.New.Manager.SetToAny",
                            Value = "Company.New.Manager.SetToAny"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Company.New.Manager.SetToNone",
                            Value = "Company.New.Manager.SetToNone"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Company.New.Manager.SetToSelf",
                            Value = "Company.New.Manager.SetToSelf"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Company.Any.Delete",
                            Value = "Company.Any.Delete"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Company.Any.Other.Get",
                            Value = "Company.Any.Other.Get"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Company.Any.Other.Set",
                            Value = "Company.Any.Other.Set"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Company.Any.Name.Get",
                            Value = "Company.Any.Name.Get"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Company.Any.Name.Set",
                            Value = "Company.Any.Name.Set"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Company.Any.Manager.Get",
                            Value = "Company.Any.Manager.Get"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Company.Any.Manager.SetFromAnyToAny",
                            Value = "Company.Any.Manager.SetFromAnyToAny"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Company.Any.Manager.SetFromAnyToSelf",
                            Value = "Company.Any.Manager.SetFromAnyToSelf"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Company.Any.Manager.SetFromNoneToSelf",
                            Value = "Company.Any.Manager.SetFromNoneToSelf"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Company.Any.Manager.SetFromNoneToAny",
                            Value = "Company.Any.Manager.SetFromNoneToAny"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Company.Any.Manager.SetFromAnyToNone",
                            Value = "Company.Any.Manager.SetFromAnyToNone"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Company.Any.Manager.SetFromSelfToAny",
                            Value = "Company.Any.Manager.SetFromSelfToAny"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Company.Any.Manager.SetFromSelfToNone",
                            Value = "Company.Any.Manager.SetFromSelfToNone"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Company.WhereUserIsManager.Delete",
                            Value = "Company.WhereUserIsManager.Delete"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Company.WhereUserIsManager.Other.Get",
                            Value = "Company.WhereUserIsManager.Other.Get"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Company.WhereUserIsManager.Other.Set",
                            Value = "Company.WhereUserIsManager.Other.Set"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Company.WhereUserIsManager.Name.Get",
                            Value = "Company.WhereUserIsManager.Name.Get"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Company.WhereUserIsManager.Name.Set",
                            Value = "Company.WhereUserIsManager.Name.Set"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Company.WhereUserIsManager.Manager.Get",
                            Value = "Company.WhereUserIsManager.Manager.Get"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Company.WhereUserIsManager.Manager.SetFromSelfToAny",
                            Value = "Company.WhereUserIsManager.Manager.SetFromSelfToAny"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Company.WhereUserIsManager.Manager.SetFromSelfToNone",
                            Value = "Company.WhereUserIsManager.Manager.SetFromSelfToNone"
                        });
                });

            modelBuilder.Entity("ConsoleClient.Identity.IdentityClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("IdentityClaims");
                });

            modelBuilder.Entity("ConsoleClient.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("IdentityUsers");
                });

            modelBuilder.Entity("CRM.Domain.Entities.Company", b =>
                {
                    b.HasOne("CRM.Domain.Entities.ApplicationUser", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("CRM.Domain.Entities.CompanyType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Manager");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ConsoleClient.Identity.IdentityClaim", b =>
                {
                    b.HasOne("ConsoleClient.Identity.IdentityUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("IdentityUserId");
                });

            modelBuilder.Entity("ConsoleClient.Identity.IdentityUser", b =>
                {
                    b.HasOne("CRM.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ConsoleClient.Identity.IdentityUser", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
